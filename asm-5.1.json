[
    {
        "org.objectweb.asm.signature.SignatureWriter": [
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void b()>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitClassType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitClassType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureVisitor: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitParameterType()>",
                "unchecked_exceptions": [],
                "methodName": "visitParameterType",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureWriter: void a()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitClassBound()>",
                "unchecked_exceptions": [],
                "methodName": "visitClassBound",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitArrayType()>",
                "unchecked_exceptions": [],
                "methodName": "visitArrayType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitReturnType()>",
                "unchecked_exceptions": [],
                "methodName": "visitReturnType",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureWriter: void a()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>",
                "unchecked_exceptions": [],
                "methodName": "visitInterfaceBound",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitFormalTypeParameter(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitFormalTypeParameter",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitInnerClassType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitInnerClassType",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureWriter: void b()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitInterface()>",
                "unchecked_exceptions": [],
                "methodName": "visitInterface",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitTypeArgument()>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeArgument",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: java.lang.String toString()>",
                "unchecked_exceptions": [],
                "methodName": "toString",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitTypeVariable(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeVariable",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeArgument",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>",
                "unchecked_exceptions": [],
                "methodName": "visitSuperclass",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureWriter: void a()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureWriter: void b()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>",
                "unchecked_exceptions": [],
                "methodName": "visitExceptionType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureWriter: void visitBaseType(char)>",
                "unchecked_exceptions": [],
                "methodName": "visitBaseType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.signature.SignatureVisitor": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitInnerClassType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitInnerClassType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitReturnType()>",
                "unchecked_exceptions": [],
                "methodName": "visitReturnType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>",
                "unchecked_exceptions": [],
                "methodName": "visitSuperclass",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitBaseType(char)>",
                "unchecked_exceptions": [],
                "methodName": "visitBaseType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitInterface()>",
                "unchecked_exceptions": [],
                "methodName": "visitInterface",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>",
                "unchecked_exceptions": [],
                "methodName": "visitExceptionType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitArrayType()>",
                "unchecked_exceptions": [],
                "methodName": "visitArrayType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitClassBound()>",
                "unchecked_exceptions": [],
                "methodName": "visitClassBound",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeArgument",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void <init>(int)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitTypeVariable(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeVariable",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitClassType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitClassType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitTypeArgument()>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeArgument",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitParameterType()>",
                "unchecked_exceptions": [],
                "methodName": "visitParameterType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: void visitFormalTypeParameter(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitFormalTypeParameter",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureVisitor: org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>",
                "unchecked_exceptions": [],
                "methodName": "visitInterfaceBound",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.signature.SignatureReader": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureReader: void accept(org.objectweb.asm.signature.SignatureVisitor)>",
                "unchecked_exceptions": [],
                "methodName": "accept",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitFormalTypeParameter(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureReader: void acceptType(org.objectweb.asm.signature.SignatureVisitor)>",
                "unchecked_exceptions": [],
                "methodName": "acceptType",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureReader: int a(java.lang.String,int,org.objectweb.asm.signature.SignatureVisitor)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.signature.SignatureReader: int a(java.lang.String,int,org.objectweb.asm.signature.SignatureVisitor)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitInnerClassType(java.lang.String)>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitClassType(java.lang.String)>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitEnd()>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitInnerClassType(java.lang.String)>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitClassType(java.lang.String)>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitTypeArgument()>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitBaseType(char)>",
                    "<org.objectweb.asm.signature.SignatureVisitor: void visitTypeVariable(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.signature.SignatureReader: void <init>(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.TypeReference": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newTryCatchReference(int)>",
                "unchecked_exceptions": [],
                "methodName": "newTryCatchReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getSuperTypeIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getSuperTypeIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.TypeReference: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getValue()>",
                "unchecked_exceptions": [],
                "methodName": "getValue",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newTypeParameterBoundReference(int,int,int)>",
                "unchecked_exceptions": [],
                "methodName": "newTypeParameterBoundReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newFormalParameterReference(int)>",
                "unchecked_exceptions": [],
                "methodName": "newFormalParameterReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getSort()>",
                "unchecked_exceptions": [],
                "methodName": "getSort",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newTypeReference(int)>",
                "unchecked_exceptions": [],
                "methodName": "newTypeReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newExceptionReference(int)>",
                "unchecked_exceptions": [],
                "methodName": "newExceptionReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getTryCatchBlockIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getTryCatchBlockIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getFormalParameterIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getFormalParameterIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getTypeArgumentIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getTypeArgumentIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getExceptionIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getExceptionIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newSuperTypeReference(int)>",
                "unchecked_exceptions": [],
                "methodName": "newSuperTypeReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newTypeParameterReference(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "newTypeParameterReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: org.objectweb.asm.TypeReference newTypeArgumentReference(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "newTypeArgumentReference",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypeReference: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getTypeParameterIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getTypeParameterIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypeReference: int getTypeParameterBoundIndex()>",
                "unchecked_exceptions": [],
                "methodName": "getTypeParameterBoundIndex",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.TypePath": [
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>(int)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.TypePath: java.lang.String toString()>",
                "unchecked_exceptions": [],
                "methodName": "toString",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypePath: int getStepArgument(int)>",
                "unchecked_exceptions": [],
                "methodName": "getStepArgument",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypePath: int getLength()>",
                "unchecked_exceptions": [],
                "methodName": "getLength",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypePath: int getStep(int)>",
                "unchecked_exceptions": [],
                "methodName": "getStep",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.TypePath: org.objectweb.asm.TypePath fromString(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "fromString",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                    "<org.objectweb.asm.TypePath: void <init>(byte[],int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.TypePath: void <init>(byte[],int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Type": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int getOpcode(int)>",
                "unchecked_exceptions": [],
                "methodName": "getOpcode",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int hashCode()>",
                "unchecked_exceptions": [],
                "methodName": "hashCode",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: boolean equals(java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "equals",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: void <clinit>()>",
                "unchecked_exceptions": [],
                "methodName": "<clinit>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void _clinit_()>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getReturnType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "getReturnType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>(java.lang.String)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
                    "<java.lang.String: void <init>(char[],int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getClassName()>",
                "unchecked_exceptions": [],
                "methodName": "getClassName",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getMethodDescriptor(org.objectweb.asm.Type,org.objectweb.asm.Type[])>",
                "unchecked_exceptions": [],
                "methodName": "getMethodDescriptor",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer)>",
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getType(java.lang.reflect.Method)>",
                "unchecked_exceptions": [],
                "methodName": "getType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "getArgumentsAndReturnSizes",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)>",
                "unchecked_exceptions": [],
                "methodName": "getMethodDescriptor",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer,java.lang.Class)>",
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer,java.lang.Class)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getType(java.lang.Class)>",
                "unchecked_exceptions": [],
                "methodName": "getType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getReturnType(java.lang.reflect.Method)>",
                "unchecked_exceptions": [],
                "methodName": "getReturnType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getDescriptor(java.lang.Class)>",
                "unchecked_exceptions": [],
                "methodName": "getDescriptor",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer,java.lang.Class)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getElementType()>",
                "unchecked_exceptions": [],
                "methodName": "getElementType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getObjectType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "getObjectType",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type[] getArgumentTypes(java.lang.reflect.Method)>",
                "unchecked_exceptions": [],
                "methodName": "getArgumentTypes",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "getArgumentTypes",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: void a(java.lang.StringBuffer,java.lang.Class)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.String: void <init>(char[],int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getInternalName()>",
                "unchecked_exceptions": [],
                "methodName": "getInternalName",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getInternalName(java.lang.Class)>",
                "unchecked_exceptions": [],
                "methodName": "getInternalName",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String toString()>",
                "unchecked_exceptions": [],
                "methodName": "toString",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int getSort()>",
                "unchecked_exceptions": [],
                "methodName": "getSort",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getReturnType()>",
                "unchecked_exceptions": [],
                "methodName": "getReturnType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int getDimensions()>",
                "unchecked_exceptions": [],
                "methodName": "getDimensions",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getConstructorDescriptor(java.lang.reflect.Constructor)>",
                "unchecked_exceptions": [],
                "methodName": "getConstructorDescriptor",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer,java.lang.Class)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int getSize()>",
                "unchecked_exceptions": [],
                "methodName": "getSize",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "getType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getMethodType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "getMethodType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: int getArgumentsAndReturnSizes()>",
                "unchecked_exceptions": [],
                "methodName": "getArgumentsAndReturnSizes",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getMethodType(org.objectweb.asm.Type,org.objectweb.asm.Type[])>",
                "unchecked_exceptions": [],
                "methodName": "getMethodType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: void a(java.lang.StringBuffer)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: void _clinit_()>",
                "unchecked_exceptions": [],
                "methodName": "_clinit_",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type[] getArgumentTypes()>",
                "unchecked_exceptions": [],
                "methodName": "getArgumentTypes",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type getType(java.lang.reflect.Constructor)>",
                "unchecked_exceptions": [],
                "methodName": "getType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Type: java.lang.String getDescriptor()>",
                "unchecked_exceptions": [],
                "methodName": "getDescriptor",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void a(java.lang.StringBuffer)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Type: org.objectweb.asm.Type a(char[],int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
                    "<org.objectweb.asm.Type: void <init>(int,char[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Opcodes": [
            {
                "external_method_calls": [
                    "<java.lang.Integer: void <init>(int)>",
                    "<java.lang.Integer: void <init>(int)>",
                    "<java.lang.Integer: void <init>(int)>",
                    "<java.lang.Integer: void <init>(int)>",
                    "<java.lang.Integer: void <init>(int)>",
                    "<java.lang.Integer: void <init>(int)>",
                    "<java.lang.Integer: void <init>(int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Opcodes: void <clinit>()>",
                "unchecked_exceptions": [],
                "methodName": "<clinit>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.MethodWriter": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitLocalVariable",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void c()>",
                "unchecked_exceptions": [],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: int a(int,int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void b()>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.MethodWriter: void c()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: int c(byte[],int)>",
                "unchecked_exceptions": [],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void f()>",
                "unchecked_exceptions": [],
                "methodName": "f",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodWriter: void b()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitLabel(org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "visitLabel",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.Frame: void <init>()>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitJumpInsn(int,org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "visitJumpInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.Label: void <init>()>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.Label: void <init>()>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                    "<org.objectweb.asm.MethodWriter: void visitLabel(org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void e()>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitTypeInsn(int,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(org.objectweb.asm.Label,org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void e()>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: int a(byte[],int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(byte[],int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: int a(int[],int[],int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitParameterAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitIntInsn(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitIntInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitMaxs(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitMaxs",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodWriter: void d()>",
                    "<org.objectweb.asm.Edge: void <init>()>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,int,org.objectweb.asm.Type[],int)>",
                    "<org.objectweb.asm.MethodWriter: void b(org.objectweb.asm.Frame)>",
                    "<org.objectweb.asm.MethodWriter: void b(org.objectweb.asm.Frame)>",
                    "<org.objectweb.asm.MethodWriter: void b()>",
                    "<org.objectweb.asm.Edge: void <init>()>",
                    "<org.objectweb.asm.Label: void b(org.objectweb.asm.Label,long,int)>",
                    "<org.objectweb.asm.Label: void b(org.objectweb.asm.Label,long,int)>",
                    "<org.objectweb.asm.Label: void b(org.objectweb.asm.Label,long,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void b(org.objectweb.asm.Frame)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodWriter: void b()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitLdcInsn(java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "visitLdcInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodWriter: int a()>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
                    "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(org.objectweb.asm.ByteVector)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.Attribute: void a(org.objectweb.asm.ClassWriter,byte[],int,int,int,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.AnnotationWriter[],int,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.AnnotationWriter[],int,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.Attribute: void a(org.objectweb.asm.ClassWriter,byte[],int,int,int,org.objectweb.asm.ByteVector)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitAttribute(org.objectweb.asm.Attribute)>",
                "unchecked_exceptions": [],
                "methodName": "visitAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitInsnAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void a(int,org.objectweb.asm.TypePath,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitLineNumber(int,org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "visitLineNumber",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void a(int,org.objectweb.asm.TypePath,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,org.objectweb.asm.TypePath,org.objectweb.asm.Label[],org.objectweb.asm.Label[],int[],java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitLocalVariableAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.IllegalStateException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>",
                "unchecked_exceptions": [
                    "java.lang.IllegalStateException"
                ],
                "methodName": "visitFrame",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodWriter: void f()>",
                    "<org.objectweb.asm.MethodWriter: void b()>",
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(java.lang.Object)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(java.lang.Object)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(java.lang.Object)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(java.lang.Object)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "visitLookupSwitchInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                    "<org.objectweb.asm.MethodWriter: void a(org.objectweb.asm.Label,org.objectweb.asm.Label[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void e()>",
                "unchecked_exceptions": [],
                "methodName": "e",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Label: void <init>()>",
                    "<org.objectweb.asm.Frame: void <init>()>",
                    "<org.objectweb.asm.Label: boolean a(org.objectweb.asm.MethodWriter,int,byte[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitMethodInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitIincInsn(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitIincInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitTryCatchBlock",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Handler: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitCode()>",
                "unchecked_exceptions": [],
                "methodName": "visitCode",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void <init>(org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void <init>(int)>",
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.Label: void <init>()>",
                    "<org.objectweb.asm.MethodWriter: void visitLabel(org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: short b(byte[],int)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitParameter(java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitParameter",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitInsn(int)>",
                "unchecked_exceptions": [],
                "methodName": "visitInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.MethodWriter: void e()>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(int,org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Edge: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotationDefault",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitVarInsn(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitVarInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.MethodWriter: void e()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                    "<org.objectweb.asm.Label: void <init>()>",
                    "<org.objectweb.asm.MethodWriter: void visitLabel(org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void a(int[],int[],org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitMultiANewArrayInsn(java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitMultiANewArrayInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitFieldInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>",
                "unchecked_exceptions": [],
                "methodName": "visitInvokeDynamicInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "visitTableSwitchInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                    "<org.objectweb.asm.MethodWriter: void a(org.objectweb.asm.Label,org.objectweb.asm.Label[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodWriter: void d()>",
                "unchecked_exceptions": [],
                "methodName": "d",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int[],int[],org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(int[],int[],org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(int[],int[],org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(int[],int[],org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodWriter: void a(byte[],int,int)>",
                    "<org.objectweb.asm.MethodWriter: void a(byte[],int,int)>",
                    "<org.objectweb.asm.MethodWriter: void a(byte[],int,int)>",
                    "<org.objectweb.asm.MethodWriter: void a(int[],int[],org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodWriter: org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitTryCatchAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void a(int,org.objectweb.asm.TypePath,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.MethodVisitor": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitIntInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitIincInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitCode()>",
                "unchecked_exceptions": [],
                "methodName": "visitCode",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitCode()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                "unchecked_exceptions": [],
                "methodName": "visitAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitAttribute(org.objectweb.asm.Attribute)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitVarInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "visitTableSwitchInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitMethodInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                    "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotationDefault",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "visitJumpInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "visitLookupSwitchInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void <init>(int,org.objectweb.asm.MethodVisitor)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "visitMethodInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                    "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitTryCatchAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitMaxs",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitParameterAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitTryCatchBlock",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitFieldInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "visitLdcInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitTypeAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>",
                "unchecked_exceptions": [],
                "methodName": "visitInvokeDynamicInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitLabel(org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "visitLabel",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitLabel(org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void <init>(int,org.objectweb.asm.MethodVisitor)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitInsn(int)>",
                "unchecked_exceptions": [],
                "methodName": "visitInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitInsn(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitLocalVariable",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int,org.objectweb.asm.TypePath,org.objectweb.asm.Label[],org.objectweb.asm.Label[],int[],java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitLocalVariableAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitInsnAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitLineNumber(int,org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "visitLineNumber",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitLineNumber(int,org.objectweb.asm.Label)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitMultiANewArrayInsn",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitParameter",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>",
                "unchecked_exceptions": [],
                "methodName": "visitFrame",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Label": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: org.objectweb.asm.Label a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: void a(long,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: void a(org.objectweb.asm.MethodWriter,org.objectweb.asm.ByteVector,int,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Label: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.Label: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Label: java.lang.String toString()>",
                "unchecked_exceptions": [],
                "methodName": "toString",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Label: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: boolean a(long)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: boolean a(org.objectweb.asm.MethodWriter,int,byte[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Label: void a(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: boolean a(org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.IllegalStateException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.Label: int getOffset()>",
                "unchecked_exceptions": [
                    "java.lang.IllegalStateException"
                ],
                "methodName": "getOffset",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Label: void b(org.objectweb.asm.Label,long,int)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Edge: void <init>()>",
                    "<org.objectweb.asm.Label: void a(long,int)>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Item": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(long)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(double)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Item: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: boolean a(org.objectweb.asm.Item)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(float)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Item: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Item: void a(java.lang.String,java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Handler": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handler: org.objectweb.asm.Handler a(org.objectweb.asm.Handler,org.objectweb.asm.Label,org.objectweb.asm.Label)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Handler: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Handler: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Handle": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: int getTag()>",
                "unchecked_exceptions": [],
                "methodName": "getTag",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: boolean isInterface()>",
                "unchecked_exceptions": [],
                "methodName": "isInterface",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: java.lang.String getDesc()>",
                "unchecked_exceptions": [],
                "methodName": "getDesc",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: java.lang.String getOwner()>",
                "unchecked_exceptions": [],
                "methodName": "getOwner",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: java.lang.String getName()>",
                "unchecked_exceptions": [],
                "methodName": "getName",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: boolean equals(java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "equals",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Handle: java.lang.String toString()>",
                "unchecked_exceptions": [],
                "methodName": "toString",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Handle: int hashCode()>",
                "unchecked_exceptions": [],
                "methodName": "hashCode",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Frame": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: int b(org.objectweb.asm.ClassWriter,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: int a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: boolean a(org.objectweb.asm.ClassWriter,org.objectweb.asm.Frame,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Frame: void a(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: int a(org.objectweb.asm.ClassWriter,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: void _clinit_()>",
                "unchecked_exceptions": [],
                "methodName": "_clinit_",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: boolean a(org.objectweb.asm.ClassWriter,int,int[],int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: void a(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: void <clinit>()>",
                "unchecked_exceptions": [],
                "methodName": "<clinit>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void _clinit_()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: int a(int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: void c(int)>",
                "unchecked_exceptions": [],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,int,org.objectweb.asm.Type[],int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>",
                    "<java.lang.RuntimeException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.Frame: void a(int,int,org.objectweb.asm.ClassWriter,org.objectweb.asm.Item)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void a(int,int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                    "<org.objectweb.asm.Frame: void a(java.lang.String)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                    "<org.objectweb.asm.Frame: void a(java.lang.String)>",
                    "<org.objectweb.asm.Frame: int a()>",
                    "<org.objectweb.asm.Frame: void a(java.lang.String)>",
                    "<org.objectweb.asm.Frame: void d(int)>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                    "<org.objectweb.asm.Frame: void a(java.lang.String)>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: int a()>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: int a()>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: int a()>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void b(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void c(int)>",
                    "<org.objectweb.asm.Frame: void a(org.objectweb.asm.ClassWriter,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Frame: void d(int)>",
                "unchecked_exceptions": [],
                "methodName": "d",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Frame: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Frame: void b(int)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.FieldWriter": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: void <init>(org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.FieldVisitor: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: void a(org.objectweb.asm.ByteVector)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.Attribute: void a(org.objectweb.asm.ClassWriter,byte[],int,int,int,org.objectweb.asm.ByteVector)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: void visitAttribute(org.objectweb.asm.Attribute)>",
                "unchecked_exceptions": [],
                "methodName": "visitAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void a(int,org.objectweb.asm.TypePath,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldWriter: int a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.FieldVisitor": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldVisitor: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.FieldVisitor: void <init>(int,org.objectweb.asm.FieldVisitor)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                "unchecked_exceptions": [],
                "methodName": "visitAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.FieldVisitor: void visitAttribute(org.objectweb.asm.Attribute)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldVisitor: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.FieldVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.FieldVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.FieldVisitor: org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitTypeAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.FieldVisitor: void <init>(int,org.objectweb.asm.FieldVisitor)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Edge": [
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Edge: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Context": [
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Context: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.ClassWriter": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
                "unchecked_exceptions": [],
                "methodName": "visitMethod",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodWriter: void <init>(org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void visitSource(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitSource",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "getCommonSuperClass",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item c(org.objectweb.asm.Item)>",
                "unchecked_exceptions": [],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(double)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(double)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putLong(long)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item b(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: void a(int,int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newField(java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "newField",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitOuterClass",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newNameType(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "newNameType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(org.objectweb.asm.Item)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassWriter: byte[] toByteArray()>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "toByteArray",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                    "<org.objectweb.asm.ByteVector: void <init>(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.FieldWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.MethodWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.Attribute: void a(org.objectweb.asm.ClassWriter,byte[],int,int,int,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ClassReader: void <init>(byte[])>",
                    "<org.objectweb.asm.ClassReader: void accept(org.objectweb.asm.ClassVisitor,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void b(int,int,int)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void <init>(org.objectweb.asm.ClassReader,int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassWriter: void <init>(int)>",
                    "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.ClassWriter)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitTypeAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.AnnotationWriter: void a(int,org.objectweb.asm.TypePath,org.objectweb.asm.ByteVector)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newHandle(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "newHandle",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(long)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(long)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putLong(long)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item c(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "visitField",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.FieldWriter: void <init>(org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int a(java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int c(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
                "unchecked_exceptions": [],
                "methodName": "visit",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: void a(int,int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "newUTF8",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putUTF8(java.lang.String)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void _clinit_()>",
                "unchecked_exceptions": [],
                "methodName": "_clinit_",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void visitAttribute(org.objectweb.asm.Attribute)>",
                "unchecked_exceptions": [],
                "methodName": "visitAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(java.lang.Object)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newHandle(int,java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "newHandle",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newInvokeDynamic(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>",
                "unchecked_exceptions": [],
                "methodName": "newInvokeDynamic",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(float)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(float)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: void b(int,int,int)>",
                    "<org.objectweb.asm.ClassWriter: void b(int,int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.Item: void <init>(int)>",
                    "<org.objectweb.asm.Item: void a(int,int)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.Item: void a(java.lang.String,java.lang.String,int)>",
                    "<org.objectweb.asm.ClassWriter: void a(int,int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void <clinit>()>",
                "unchecked_exceptions": [],
                "methodName": "<clinit>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassWriter: void _clinit_()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void <init>(int)>",
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.Item: void <init>()>",
                    "<org.objectweb.asm.Item: void <init>()>",
                    "<org.objectweb.asm.Item: void <init>()>",
                    "<org.objectweb.asm.Item: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void a(int,int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newConst(java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "newConst",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newMethod(java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "newMethod",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int a(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitInnerClass",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item a(java.lang.String,java.lang.String,java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassWriter: void a(int,int,int)>",
                    "<org.objectweb.asm.Item: void <init>(int,org.objectweb.asm.Item)>",
                    "<org.objectweb.asm.ClassWriter: void b(org.objectweb.asm.Item)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newMethodType(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "newMethodType",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "newClass",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.ClassVisitor": [
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void <init>(int,org.objectweb.asm.ClassVisitor)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitSource",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitOuterClass",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
                "unchecked_exceptions": [],
                "methodName": "visit",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>",
                "unchecked_exceptions": [],
                "methodName": "visitInnerClass",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void <init>(int,org.objectweb.asm.ClassVisitor)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "visitField",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
                "unchecked_exceptions": [],
                "methodName": "visitMethod",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                "unchecked_exceptions": [],
                "methodName": "visitAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassVisitor: void visitAttribute(org.objectweb.asm.Attribute)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.RuntimeException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassVisitor: org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int,org.objectweb.asm.TypePath,java.lang.String,boolean)>",
                "unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ],
                "methodName": "visitTypeAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.ClassReader": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int getItem(int)>",
                "unchecked_exceptions": [],
                "methodName": "getItem",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>",
                "unchecked_exceptions": [],
                "methodName": "readClass",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a(org.objectweb.asm.Context,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.TypePath: void <init>(byte[],int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int getAccess()>",
                "unchecked_exceptions": [],
                "methodName": "getAccess",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.String getSuperName()>",
                "unchecked_exceptions": [],
                "methodName": "getSuperName",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.ClassWriter,org.objectweb.asm.Item[],char[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void <init>(int)>",
                    "<org.objectweb.asm.Item: void a(int,int)>",
                    "<org.objectweb.asm.ByteVector: void <init>(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "readLabel",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Label: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void <init>(byte[])>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void accept(org.objectweb.asm.ClassVisitor,org.objectweb.asm.Attribute[],int)>",
                "unchecked_exceptions": [],
                "methodName": "accept",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Context: void <init>()>",
                    "<org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
                    "<org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                    "<org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>",
                    "<org.objectweb.asm.ClassVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>",
                "unchecked_exceptions": [],
                "methodName": "readUTF8",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Double: void <init>(double)>",
                    "<java.lang.Long: void <init>(long)>",
                    "<java.lang.Float: void <init>(float)>",
                    "<java.lang.Integer: void <init>(int)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>",
                "unchecked_exceptions": [],
                "methodName": "readConst",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Handle: void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: long readLong(int)>",
                "unchecked_exceptions": [],
                "methodName": "readLong",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.String[] getInterfaces()>",
                "unchecked_exceptions": [],
                "methodName": "getInterfaces",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int readUnsignedShort(int)>",
                "unchecked_exceptions": [],
                "methodName": "readUnsignedShort",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.String: void <init>(char[],int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.String a(int,int,char[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a(org.objectweb.asm.ClassVisitor,org.objectweb.asm.Context,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.FieldVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                    "<org.objectweb.asm.FieldVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Byte: void <init>(byte)>",
                    "<java.lang.Character: void <init>(char)>",
                    "<java.lang.Short: void <init>(short)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a(int,char[],java.lang.String,org.objectweb.asm.AnnotationVisitor)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int getItemCount()>",
                "unchecked_exceptions": [],
                "methodName": "getItemCount",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void <init>(java.io.InputStream)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [
                    "java.io.IOException"
                ],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: void <init>(byte[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: org.objectweb.asm.Attribute a(org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Attribute: void <init>(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.Context)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a(int,char[],boolean,org.objectweb.asm.AnnotationVisitor)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a(java.lang.Object[],int,int,char[],org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int readByte(int)>",
                "unchecked_exceptions": [],
                "methodName": "readByte",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int readInt(int)>",
                "unchecked_exceptions": [],
                "methodName": "readInt",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.io.IOException: void <init>(java.lang.String)>",
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>",
                    "<java.io.InputStream: void close()>",
                    "<java.io.InputStream: void close()>",
                    "<java.io.InputStream: void close()>",
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassReader: byte[] a(java.io.InputStream,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [
                    "java.io.IOException"
                ],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void b(org.objectweb.asm.MethodVisitor,org.objectweb.asm.Context,int,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int getMaxStringLength()>",
                "unchecked_exceptions": [],
                "methodName": "getMaxStringLength",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.MethodVisitor,org.objectweb.asm.Context,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>",
                    "<org.objectweb.asm.Label: void <init>()>",
                    "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.Context)>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitLabel(org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodVisitor: void visitLineNumber(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodVisitor: void visitLineNumber(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitInsn(int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>",
                    "<org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>",
                    "<org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>",
                    "<org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>",
                    "<org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>",
                    "<org.objectweb.asm.ClassReader: int a(int,char[],boolean,org.objectweb.asm.AnnotationVisitor)>",
                    "<org.objectweb.asm.ClassReader: int a(int,char[],boolean,org.objectweb.asm.AnnotationVisitor)>",
                    "<org.objectweb.asm.MethodVisitor: void visitLabel(org.objectweb.asm.Label)>",
                    "<org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                    "<org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void accept(org.objectweb.asm.ClassVisitor,int)>",
                "unchecked_exceptions": [],
                "methodName": "accept",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: void accept(org.objectweb.asm.ClassVisitor,org.objectweb.asm.Attribute[],int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.StringBuffer: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ClassReader: void <init>(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [
                    "java.io.IOException"
                ],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: void <init>(byte[])>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int[] a(org.objectweb.asm.MethodVisitor,org.objectweb.asm.Context,int,boolean)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>",
                    "<org.objectweb.asm.TypePath: void <init>(byte[],int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: short readShort(int)>",
                "unchecked_exceptions": [],
                "methodName": "readShort",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: java.lang.String getClassName()>",
                "unchecked_exceptions": [],
                "methodName": "getClassName",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int b(org.objectweb.asm.ClassVisitor,org.objectweb.asm.Context,int)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.MethodVisitor: void visitParameter(java.lang.String,int)>",
                    "<org.objectweb.asm.ClassReader: int a(int,char[],java.lang.String,org.objectweb.asm.AnnotationVisitor)>",
                    "<org.objectweb.asm.AnnotationVisitor: void visitEnd()>",
                    "<org.objectweb.asm.ClassReader: void b(org.objectweb.asm.MethodVisitor,org.objectweb.asm.Context,int,boolean)>",
                    "<org.objectweb.asm.ClassReader: void b(org.objectweb.asm.MethodVisitor,org.objectweb.asm.Context,int,boolean)>",
                    "<org.objectweb.asm.MethodVisitor: void visitAttribute(org.objectweb.asm.Attribute)>",
                    "<org.objectweb.asm.MethodVisitor: void visitCode()>",
                    "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.MethodVisitor,org.objectweb.asm.Context,int)>",
                    "<org.objectweb.asm.MethodVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.RuntimeException"
                ]
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.ClassWriter)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Item: void <init>(int)>",
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.Item: void a(int)>",
                    "<org.objectweb.asm.Item: void a(float)>",
                    "<org.objectweb.asm.Item: void a(long)>",
                    "<org.objectweb.asm.Item: void a(double)>",
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ClassReader: void a(org.objectweb.asm.ClassWriter,org.objectweb.asm.Item[],char[])>",
                    "<org.objectweb.asm.Item: void a(java.lang.String,java.lang.String,int)>",
                    "<org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ClassReader: int a(int,boolean,boolean,org.objectweb.asm.Context)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassReader: org.objectweb.asm.Label readLabel(int,org.objectweb.asm.Label[])>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.ByteVector": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                "unchecked_exceptions": [],
                "methodName": "putInt",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "b",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putLong(long)>",
                "unchecked_exceptions": [],
                "methodName": "putLong",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector c(java.lang.String,int,int)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "c",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.ByteVector: void a(int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ByteVector: void <init>()>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                "unchecked_exceptions": [],
                "methodName": "putShort",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putUTF8(java.lang.String)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "putUTF8",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector a(int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                "unchecked_exceptions": [],
                "methodName": "putByte",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
                "unchecked_exceptions": [],
                "methodName": "putByteArray",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void a(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.ByteVector: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.Attribute": [
            {
                "external_method_calls": [
                    "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>"
                ],
                "methodSignature": "<org.objectweb.asm.Attribute: org.objectweb.asm.Attribute read(org.objectweb.asm.ClassReader,int,int,char[],int,org.objectweb.asm.Label[])>",
                "unchecked_exceptions": [],
                "methodName": "read",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.Attribute: void <init>(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: boolean isUnknown()>",
                "unchecked_exceptions": [],
                "methodName": "isUnknown",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: int a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.Attribute: void <init>(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: org.objectweb.asm.Label[] getLabels()>",
                "unchecked_exceptions": [],
                "methodName": "getLabels",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: int a(org.objectweb.asm.ClassWriter,byte[],int,int,int)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: org.objectweb.asm.ByteVector write(org.objectweb.asm.ClassWriter,byte[],int,int,int)>",
                "unchecked_exceptions": [],
                "methodName": "write",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: void <init>()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: boolean isCodeAttribute()>",
                "unchecked_exceptions": [],
                "methodName": "isCodeAttribute",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.Attribute: void a(org.objectweb.asm.ClassWriter,byte[],int,int,int,org.objectweb.asm.ByteVector)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.AnnotationWriter": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void <init>(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.ByteVector)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationWriter: void visitEnd()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitArray",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void a(int,org.objectweb.asm.TypePath,org.objectweb.asm.ByteVector)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void visit(java.lang.String,java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "visit",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector b(int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: int a()>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void a(org.objectweb.asm.AnnotationWriter[],int,org.objectweb.asm.ByteVector)>",
                "unchecked_exceptions": [],
                "methodName": "a",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByte(int)>",
                    "<org.objectweb.asm.AnnotationWriter: void visitEnd()>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitEnum",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>",
                    "<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationWriter: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            }
        ]
    },
    {
        "org.objectweb.asm.AnnotationVisitor": [
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitAnnotation",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitArray",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>",
                "unchecked_exceptions": [],
                "methodName": "visitEnum",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: void <init>(int)>",
                "unchecked_exceptions": [],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void <init>(int,org.objectweb.asm.AnnotationVisitor)>"
                ],
                "transitive_unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ]
            },
            {
                "external_method_calls": [
                    "<java.lang.Object: void <init>()>",
                    "<java.lang.IllegalArgumentException: void <init>()>"
                ],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: void <init>(int,org.objectweb.asm.AnnotationVisitor)>",
                "unchecked_exceptions": [
                    "java.lang.IllegalArgumentException"
                ],
                "methodName": "<init>",
                "checked_exceptions": [],
                "internal_method_calls": [],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: void visitEnd()>",
                "unchecked_exceptions": [],
                "methodName": "visitEnd",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void visitEnd()>"
                ],
                "transitive_unchecked_exceptions": []
            },
            {
                "external_method_calls": [],
                "methodSignature": "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>",
                "unchecked_exceptions": [],
                "methodName": "visit",
                "checked_exceptions": [],
                "internal_method_calls": [
                    "<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>"
                ],
                "transitive_unchecked_exceptions": []
            }
        ]
    }
]